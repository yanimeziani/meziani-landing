version: "3.7"
services:
  traefik:
    image: "traefik"
    restart: always
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Added for the Traefik dashboard
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker
    environment:
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    volumes:
      - n8n_data:/home/node/.n8n
      - /local-files:/files
    networks:
      - web

  meziani-landing:
    image: node:18-alpine
    restart: always
    working_dir: /app
    volumes:
      - meziani_landing_data:/app
    command: >
      sh -c "
        echo 'Starting setup...' &&
        ls -la /app &&
        if [ ! -d /app/node_modules ]; then
          echo 'Installing dependencies...' &&
          apk add --no-cache git &&
          git clone https://github.com/yanimeziani/meziani-landing.git /tmp/repo &&
          ls -la /tmp/repo &&
          cp -r /tmp/repo/* /app/ &&
          rm -rf /tmp/repo &&
          npm install &&
          npm run build;
        fi &&
        echo 'Starting app...' &&
        ls -la /app &&
        ls -la /app/.next || echo '.next directory not found!' &&
        npm start
      "
    expose:
      - "3000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.meziani.rule=Host(`${DOMAIN_NAME}`) || Host(`www.${DOMAIN_NAME}`)
      - traefik.http.routers.meziani.tls=true
      - traefik.http.routers.meziani.entrypoints=web,websecure
      - traefik.http.routers.meziani.tls.certresolver=mytlschallenge
      - traefik.http.services.meziani.loadbalancer.server.port=3000
      - traefik.http.middlewares.meziani-headers.headers.SSLRedirect=true
      - traefik.http.middlewares.meziani-headers.headers.STSSeconds=315360000
      - traefik.http.middlewares.meziani-headers.headers.browserXSSFilter=true
      - traefik.http.middlewares.meziani-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.meziani-headers.headers.forceSTSHeader=true
      - traefik.http.middlewares.meziani-headers.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.meziani-headers.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.meziani-headers.headers.STSPreload=true
      - traefik.http.routers.meziani.middlewares=meziani-headers@docker
    environment:
      - NODE_ENV=production
      - PORT=3000
      - GITHUB_USERNAME=${GITHUB_USERNAME}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    networks:
      - web

volumes:
  traefik_data:
    external: true
  n8n_data:
    external: true
  meziani_landing_data:

networks:
  web:
    driver: bridge
